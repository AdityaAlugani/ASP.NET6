// <auto-generated />
using System;
using CityInfo.API.Dbcontexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20230507073611_foriegnkeyremoved")]
    partial class foriegnkeyremoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointsOfInterest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("cityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("cityId");

                    b.ToTable("pointsOfInterests");
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointsOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "city")
                        .WithMany("pointsofinterest")
                        .HasForeignKey("cityId");

                    b.Navigation("city");
                });

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Navigation("pointsofinterest");
                });
#pragma warning restore 612, 618
        }
    }
}
